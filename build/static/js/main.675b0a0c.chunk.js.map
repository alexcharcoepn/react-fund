{"version":3,"sources":["Components/Counter.js","Components/Accordeon.js","Components/Input.js","Components/Filter.jsx","Components/ListItem.jsx","Components/Loop.js","Components/Detail.js","App.js","reportWebVitals.js","index.js"],"names":["Counter","props","useState","count","setCount","className","btnContent","onClick","Accordeon","isToggled","setIsToggled","showMe","console","log","Input","input","setInput","value","type","onChange","e","target","includes","Filter","setFilter","filter","ListItem","id","title","config","poster_path","images","base_url","src","alt","to","Loop","data","movies","setMovies","setConfig","ulRef","useRef","getMovies","a","fetch","res","json","mov","results","error","getConfig","con","useEffect","ref","item","toLowerCase","map","Detail","useParams","HelloWorld","name","greetings","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.675b0a0c.chunk.js","sourcesContent":["import React,{useState} from 'react'\nimport '../App.css';\n\nfunction Counter(props) {\n    const [count,setCount]=useState(0)\n    return (\n        <div>\n            <p>{count}</p>\n            <button className=\"btn-Component\">\n                {props.btnContent}\n            </button>\n            <button onClick={()=>setCount(count+1)} className=\"btn-Component\">Increase</button>\n            <button onClick={()=>setCount(count-1)} className=\"btn-Component\">Decrease</button>\n      \n        </div>\n    )\n}\n\nexport default Counter;\n","import React,{useState} from 'react'\nimport '../App.css';\n \nfunction Accordeon() {\n    const [isToggled,setIsToggled]=useState(false)\n\n    const showMe=isToggled?(<h3 >Showing Togling</h3>):( <h3 >No Showing Togling</h3>  );\n\n    return (\n        <div>\n            {showMe}\n            <button \n//                className=\"btn-Component\"\n                className=\"btn btn-primary\"\n                onClick={()=>{\n                    setIsToggled(!isToggled);\n                    console.log(isToggled)\n                }}\n                >Toggle</button>\n        </div>\n    )\n}\n\nexport default Accordeon\n","import React,{useState} from 'react'\n\nfunction Input() {\n    const [input,setInput]=useState(\"\")\n\n    return (\n        <div>\n     \n        {\n            input ?\n            <h3>{input}</h3>:\n            <h4>--Empty--</h4>\n        }\n\n            <label className=\"label\" >Text: </label>\n            <input \n                value={input} \n                type=\"text\"\n                onChange={(e)=>{\n                    //Avoid t in input\n                    if(!e.target.value.includes(\"t\")){\n                        setInput(e.target.value)}\n                    }\n                }\n                ></input>\n        </div>\n    )\n}\n\nexport default Input\n","import React from 'react'\nimport PropTypes from 'prop-types'; \n\nfunction Filter({setFilter,filter}) {\n    return (\n        <label>\n            Filter:\n            <input\n                onChange={(e)=>setFilter(e.target.value)}\n                value={filter}\n            />\n        </label>\n    )\n}\n\n//Parameters' Requirements\nFilter.propTypes={\n     filter:PropTypes.string.isRequired,\n     setFilter:PropTypes.func.isRequired\n}\n\n\n\nexport default Filter\n","import PropTypes from 'prop-types'; \nimport {  Link } from 'react-router-dom'\n\n\nfunction ListItem({id,title,config,poster_path}) {\n\n    //Effect takes place when it is render in the DOM, not UPDATED\n   /* useEffect(()=>{\n        console.log(\"Effect item\")\n    },[]);\n*/\n\n    return (\n        <li>\n            {\n                config.images?.base_url && (\n                <img  \n                    src={config.images.base_url+\"w342\"+poster_path} \n                    alt={title + \" Poster\"}\n                />)\n            }\n            <Link to={`/movie/${id}`}> \n            <h4>{title}</h4>\n            </Link>\n                \n        </li>\n\n        \n    )\n}\n\n\nListItem.propTypes={\n    list:PropTypes.shape({\n        id:PropTypes.number.isRequired,\n        title:PropTypes.string.isRequired,\n        poster_path:PropTypes.string.isRequired\n    }).isRequired,\n    config:PropTypes.shape({\n        images:PropTypes.shape({\n            base_url:PropTypes.string\n        })\n    })\n}\n \nexport default ListItem;\n\n/*\nhttp://image.tmdb.org/t/p//8UlWHLMpgZm9bx6QYh0NFoq67TZ.jpg\n\n*/","import React,{useState,useRef,useEffect} from 'react'\nimport \"../App.css\"\nimport Filter from './Filter'\nimport ListItem from './ListItem'\n\nconst URL=\"https://api.themoviedb.org/3/discover/movie?api_key=40c432e4dea1ea50718a0416a2bf27cf&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=1\"\nconst confURL=\"https://api.themoviedb.org/3/configuration?api_key=40c432e4dea1ea50718a0416a2bf27cf\"\n    \n\nfunction Loop({data}) {\n    \n    const [filter,setFilter]=useState(\"\")\n    const [movies,setMovies]=useState([])\n    const [config,setConfig]=useState({})\n\n    const ulRef=useRef(null)\n\n    const getMovies=async()=>{\n        try{\n            const res= await fetch(URL)\n            const mov=await res.json()\n            setMovies(mov.results)\n            console.log(mov.results,movies)\n        }catch (e){\n            console.error(e)\n        }\n    }\n\n    const getConfig=async()=>{\n        try{\n            const res= await fetch(confURL)\n            const con=await res.json()\n            setConfig(con)\n        }catch (e){\n            console.error(e)\n        }\n    }\n\n    //IN this case, every single time a render gets update -> effect's fired\n    //we can tell useEffect, when to run\n     \n    useEffect(()=>{\n        getMovies();\n    },[]);\n\n    useEffect(()=>{\n        getConfig();\n    },[])\n\n    //this array is the efect dependency, tell when to run\n    //As empty, it will run only at first render\n    //usinf ',[filter]', will run when filter is updated    \n\n    return (\n        <div ref={ulRef}> \n         \n         <Filter filter={filter} setFilter={setFilter}/>\n            <ul className={\"movies-list\"}>\n            {\n                //Filtering with input, for each time array filter a contins, those\n                //will pass to the map function\n                movies.filter((item)=>{\n                    return item.title.toLowerCase().includes(filter.toLowerCase())\n                }).map((item)=>{\n                   return( <ListItem id={item.id} title={item.title} config={config} poster_path={item.poster_path}/>)\n              //     return(  <li key={item}>{item}</li>)\n                })\n            }\n            </ul>\n        </div>\n    )\n}\n\nexport default Loop\n\n\n//RE-RENDER A COMPONENT\n//a state change, a props change\n\n//useEffect(): trigger side effects,","import React,{useEffect,useState} from 'react'\nimport { useParams} from 'react-router-dom'\n\nconst URL=\"https://api.themoviedb.org/3/movie\"\nconst KeyURL=\"?api_key=40c432e4dea1ea50718a0416a2bf27cf\"\n\nfunction Detail() {\n    console.log(\"Launching Detail\")\n    const {id}=useParams();\n    /*const [movie,setMovie]=useState({})\n\n    const getMovie=async()=>{\n        try{\n            const res= await fetch(URL+id+KeyURL)\n            const mov=await res.json()\n            setMovie(mov)\n            console.log(mov)\n        }catch (e){\n            console.error(e)\n        }\n    }\n\n    useEffect(()=>{\n        getMovie()\n    },[id])\n*/\n\n    return (\n        <div>\n            <h2>Movie Detail! {id}</h2>\n\n\n\n        </div>\n    )\n}\n\nexport default Detail\n","import './App.css';\nimport React,{useState} from 'react'\nimport Counter from './Components/Counter'\nimport Accordeon from \"./Components/Accordeon\"\nimport Input from \"./Components/Input\"\nimport Loop from './Components/Loop';\nimport {Route,Switch,BrowserRouter as Router} from 'react-router-dom';\nimport Detail from './Components/Detail';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      \n      <HelloWorld name=\"Alexander\" greetings=\"XDD\"/>\n      <Counter btnContent=\"Apachurrale\" />\n      <Accordeon/>\n      \n\n    <Router>\n\n      <Switch>\n\n\n      <Route path=\"/movie/:id \">\n          <Detail  />\n        </Route>\n\n        <Route path=\"/\">\n          <Input/>\n            <Loop data={[{value:\"Doge\"},{value:\"Cheems\"},{value:\"Gabe\"}]}/>\n        </Route>\n        \n       \n      </Switch>\n    </Router>\n\n\n\n      </header>\n\n    </div>\n  );\n}\n\nfunction HelloWorld({name, greetings=\"Username\"}){\n  return <h1> Hey there... {name} {greetings} !!!</h1>\n}\n\n\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}